include scnx/SCNXSGE.cfg
includeif sndx/sndx.cfg
include MOV\MOP.inc	
include system\SYSBase.inc

SILAB Configuration
{
	Computerconfiguration Rechner
   	{
		include System\CompBase.inc
   	};
   	DPUConfiguration DPUs
   	{
        include System\DPUBase_SGE.inc
		Pool Allround : Full
		{
			
			Executeable = true;
			include includes/mydpu.inc
			#include includes/lct.inc
			include system/SYSNav_SGE.inc
		};
	};
};

SILAB TRF
{
       include SILAB_TRFX_400.cfg
};

SILAB SCNXSGE 
{
	SCNXSGE CourseParams
	{
		TextureParams GraphicOptions
		{
			TextureBaseLevel = 0;
			TextureMaxLevel = 3;
			TextureMinLOD = 0;
			TextureMaxLOD = 3;
		};
	};
}; 

SILAB SCN
{
	include scnx\SCNX.cfg
	
	CourseType Bundesstrasse
		{
		ve = 100.0;
	
		# distanzgerade, distanzschräg (min 1.4 max 3), höhe (mind. -0.7), textur
	    Shoulder = {2.0, 3, -0.7, Shoulder1};
		Overlay = {TarNew2, 1};

		LaneInfos =
		{
			(0, 4, 0.0, Onwards, Tar, 1.0, 0.0, { (None, 0.0) } ),
			(1, 4, 0.0, Onwards, Tar, 1.0, 0.0, { (None, 0.0) } ),
			(2, 4, 0.0, Onwards, Tar, 1.0, 0.0, { (None, 0.0) } )
		};

		LaneTransitions =
		{
			(0, 0,{
					(ReflectionPosts, -0.56, 1.0, Towards, 50.0, 0.0),
					(Line, 0.19, 0.12, Towards, 1.0, 0.0),
					(StoneBorderLeft, -0.68, 1.5, Towards, 8.0, 0)
				}
			),
			(0, 1,
				{
					(Line, 0.0, 0.12, Towards, 4.0, 8.0)			
				}
			),
			
			(1,2,
				{
					(Line, 0.0, 0.12, Towards, 4.0, 8.0)
				}
			
			),
			
			(2, 2,
				{
					(ReflectionPosts, 0.56, 1.0, Towards, 50.0, 0.0),
					(Line, -0.19, 0.12, Towards, 1.0, 0.0),
					(StoneBorderRight, 0.68, 1.5, Towards, 8.0, 0)
				}
			)
			
			
		};
	};
#######################################################################################
	
	define Module Einfahrt			#500m, kein Gegenverkehr
		{
		ModuleID = 100;

		define Course E1
		{
			NodeID = 1;
			Type = Bundesstrasse;

			Straight(2000);
			
			
			Objects = 
			{		
				
			};
			

			
		};
		define Course E2
		{
			NodeID = 2;
			Type = Bundesstrasse;

			Straight(2000);
			
			
			Objects = 
			{		
				
			};
			

			
		};

		
			
		E1 	e1;
		E2  e2;
		;
		Connections =
		{
			Port1 <-> e1.Begin,
			e1.End <-> e2.Begin,
			e2.End <->Port2
			
		};
	};
	define Module Fahren			#3x5000m
		{
		ModuleID = 200;

		define Course F1			#5000m
		{
			NodeID = 10;
			Type = Bundesstrasse;

			Straight(2000);
			
			
			Objects = 
			{		
				
				
			};
			

			
		};
		define Course F2			#5000m
		{
			NodeID = 10;
			Type = Bundesstrasse;

			Straight(2000);
			
			
			Objects = 
			{		
				#(sign.sign200_274_100,100, 6),
				#(sign.sign200_206, 200, 6), # if i delete this java code gives an error and cant find sign
				#(sign.sign200_274_050,205,6)
			};
			

			
		};
		
		F1 	f1;			# ohne Gegenverkehr
		F2	f2;

		Connections =
		{
			Port1 <-> f1.Begin,
			f1.End <-> f2.Begin,
			f2.End <-> Port2
		};
		
		
	};
	Map Map1
	{
		Einfahrt		ein;
		Fahren			fahr;
		
		Connections =
		{
			ein.Port2 <-> fahr.Port1,
			fahr.Port2 <-> ein.Port1
		};


		SetupPoints =
		{
			("SetupPoint1", ein.e1.Begin)
		};
	};
};